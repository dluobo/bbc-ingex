DATABASELIB_DIR = ../../database/src
LIBMXF_DIR = ../../../libMXF
WRITEAVIDMXF_DIR = $(LIBMXF_DIR)/examples/writeavidmxf
MXFWRITER_DIR = ../../mxfwriter
YUVLIB_DIR = ../../../common/YUVlib

CFLAGS = -g -Wall -Wundef -W -Wno-unused-parameter -O3 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS
INCLUDES = -I. -I$(YUVLIB_DIR) -I/usr/local/include -I$(LIBMXF_DIR)/lib/include -I$(WRITEAVIDMXF_DIR) -I$(DATABASELIB_DIR) -I$(MXFWRITER_DIR) -I/usr/local/include/ffmpeg/

C_COMPILE = gcc $(CFLAGS) $(INCLUDES)
CPP_COMPILE = g++ $(CFLAGS) $(INCLUDES)
AR = ar cr

# Use the following alternative link line for ffmpeg rpm installed ffmpeg
FFMPEG_RPM := $(shell rpm -q ffmpeg-h264-aac > /dev/null && echo YES)
ifeq "$(FFMPEG_RPM)" "YES"
FFMPEG_LIBS = -lavformat -lavcodec -lavutil -lz -lmp3lame -lx264 -la52 -lfaac -lfaad -lm
else
FFMPEG_LIBS = -lavformat -lavcodec -lavutil -lm
endif


SOURCES = transcode_avid_mxf.cpp
OBJECTS = $(subst .cpp,.o,$(SOURCES))
DEPENDENCIES = $(subst .cpp,.d,$(SOURCES))

C_SOURCES = mjpeg_compress.c
C_OBJECTS = $(subst .c,.o,$(C_SOURCES))
C_DEPENDENCIES += $(subst .c,.d,$(C_SOURCES))

SOURCE += C_SOURCES
OBJECTS += C_OBJECTS
DEPENDENCIES += C_DEPENDENCIES



.PHONY: all
all: libmxfwriter.a transcode_avid_mxf

	
.PHONY: libmxfwriter.a
	@cd $(MXFWRITER_DIR) && $(MAKE) $@
	
	
transcode_avid_mxf: libmxfwriter.a transcode_avid_mxf.o mjpeg_compress.o
	$(CPP_COMPILE) mjpeg_compress.o transcode_avid_mxf.o  \
	-L$(LIBMXF_DIR)/lib -L$(MXFWRITER_DIR) -L$(DATABASELIB_DIR) -L$(WRITEAVIDMXF_DIR) -L$(LIBMXF_DIR)/lib -L$(YUVLIB_DIR) \
	-ljpeg $(FFMPEG_LIBS) -lYUVlib -lprodautodb -lmxfwriter -lwriteavidmxf -lMXFReader -lMXF -lodbc++ -luuid -lpthread -o $@

	
%.d : %.cpp
	@echo Generating dependency file for $<; \
	$(CPP_COMPILE) -M $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

%.d : %.c
	@echo Generating dependency file for $<; \
	$(C_COMPILE) -M $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

%.o: %.cpp
	$(CPP_COMPILE) -c $< -o $@	
	
%.o: %.c
	$(C_COMPILE) -c $< -o $@	
	

.PHONY: clean
clean:
	@rm -f *.d *.o *.a *~ transcode_avid_mxf
	
	

ifneq "$(MAKECMDGOALS)" "clean"
-include $(DEPENDENCIES)
endif	
	


